import Layout from "@/components/Layout";
import SideNav from "@/components/SideNav";
import Head from "next/head";
import Link from "next/link";
import OptimizeImage from "@/helpers/optimizedImage";
import Image from "next/image";
import PrivateRoutes from "@/components/PrivateRoutes";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";

const ExplorePeople = ({authenticatedUser}: any) => {
    const router = useRouter();
    const [loading, setLoading] = useState<boolean>(true);
    const [sideNavActive, setSideNavActive] = useState<string>('');
    const [suggestFollowProfiles, setSuggestFollowProfiles] = useState<[]>([]);

    const handleFollow = async (profile_id: string, index: number) => {
        document.querySelector(`[data-type-button-follow-id='${index}']`)?.remove();

        try {
            const settings: object = {
                method: 'POST',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    profile_id: profile_id
                })
            }

            const response = await fetch(`${process.env.REACT_APP_API}/api/v1/instagram/follow`, settings);
            const result = await response.json();

            if(result.status === 'ok') {
                alert('success');
            }else {
                alert('failed');
            }
        }catch(error) {
            alert(error);
        }
    }

    useEffect(() => {
        (async() => {
            try {    
                const response = await fetch(`${process.env.REACT_APP_API}/api/v1/instagram/suggest/follow/profiles`, {
                    method: 'GET',
                    credentials: 'include'
                });
    
                if(response.status !== 200) {
                    router.push('/home');
                }

                const { suggestFollowProfiles } = await response.json();
    
                setSideNavActive('');
                setSuggestFollowProfiles(suggestFollowProfiles)
                setLoading(false);
            }catch(error) {
                router.push('/home');
            }
        })();
    
    }, []);

    return (
        <>
            <Head>
                <title>Instagram</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/instagram_icon.ico" />
            </Head>

            {
                !loading &&
                <Layout>
                    <SideNav authenticatedUser={authenticatedUser} sideNavActive={sideNavActive}/>
                    <div className='flex-1 p-4'>
                        <div className="mx-auto max-w-[600px] pt-14 flex gap-4">
                            <div className='flex-1 h-[200px]'>
                                <div className='flex justify-between mb-5'>
                                    <span className='font-semibold'>Suggested</span>
                                </div>

                                {
                                    suggestFollowProfiles.length > 0 && 
                                    suggestFollowProfiles.map((eachSuggest: any, index: number) => (
                                        <div key={index} className='flex h-auto gap-2 mb-4'>
                                            <div className='w-[54px] h-[54px] flex items-center justify-center'>
                                                <Link href={`/${eachSuggest.username}`}>
                                                    <Image width={120} height={120} crossOrigin='anonymous' src={OptimizeImage(eachSuggest.profile.profilePicture, ['w_120', 'h_120', 'c_fill'])} alt="" className='w-[44px] h-[44px] object-cover rounded-[50%]'/>
                                                </Link>
                                            </div>
                                            <div className='flex-1 flex flex-col'>
                                                <Link href={`/${eachSuggest.username}`} className="mt-[-4px]"><span className='text-[14px] font-medium'>{eachSuggest.username}</span></Link>
                                                <span className='text-[14px] text-neutral-500 leading-[12px]'>{eachSuggest.profile.fullName}</span>
                                                <span className='text-[12px] text-neutral-500'>Suggested for you</span>
                                            </div>
                                            <div className='flex items-center'>
                                                <button data-type-button-follow-id={index} onClick={(e) => {handleFollow(eachSuggest.profile._id, index);}} type="button" className='text-[14px] text-white bg-sky-500 hover:bg-blue-500 px-5 py-[5.5px] rounded-lg font-medium'>Follow</button>
                                            </div>
                                        </div>
                                    ))
                                }
                            </div>
                        </div>
                    </div>
                </Layout>
            }
        </>
    )
}

export default PrivateRoutes(ExplorePeople);

export async function getServerSideProps(context: any) {
    const { res } = context;

    res.setHeader("Cross-Origin-Opener-Policy", "same-origin");
    res.setHeader("Cross-Origin-Embedder-Policy", "require-corp");

    return {
        props: {}
    };
}